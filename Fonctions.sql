CREATE OR REMPLACE FUNCTION Stock_vide(un_Produit INTEGER) RETURN INTEGER
AS
stock_P BOOLEAN 
BEGIN SELECT (quantité=0) INTO stock_P
FROM PRODUIT  
WHERE un_Produit = numProduit
RETURN stock_P;
END;
 
 
CREATE OR REMPLACE FUNCTION get_Nom(un_Produit INTEGER) RETURN INTEGER
AS nom_P VARCHAR2
BEGIN
SELECT nom INTO nom_P
FROM PRODUIT  
WHERE un_Produit = numProduit
RETURN nom_P;
END;
 
 
 
 
CREATE OR REMPLACE FUNCTION get_Stock(un_Produit INTEGER) RETURN INTEGER
AS stock_P INTEGER
BEGIN
SELECT quantité INTO stock_P
FROM PRODUIT  
WHERE un_Produit = numProduit
RETURN stock_P
END;
 
 
CREATE OR REMPLACE FUNCTION get_Prix(un_Produit INTEGER) RETURN INTEGER
AS prix_P FLOAT
BEGIN
SELECT prix INTO prix_P
FROM PRODUIT  
WHERE un_Produit = numProduit
RETURN prix_P
END;
 
 
 
 
 
CREATE TRIGGER stock_Inssufisant BEFORE INSERT 
ON CONSOMATION FOR EACH ROW
BEGIN 
IF NEW.qantiteConsomme >get_Stock(NEW.numProduit)
THEN
 
DBMS_OUTPUT.PUT_LINE(‘Le stock estinssufisant’)
 
END;
 
CREATE TRIGGER rupture_stock AFTER INSERT 
ON  CONSOMATION  FOR EACH ROW
BEGIN 
IF  Stock_vide(NEW.numProduit)
THEN
INSERT INTO COURSEVALUE(1,,get_Prix(NEW.numProduit), UTC_DATE() );
DBMS_OUTPUT.PUT_LINE(‘Le stockvide’ );
 
END
CREATE OR REMPLACE FUNCTION Stock_vide(un_Produit INTEGER) RETURN INTEGER
AS
stock_P BOOLEAN 
BEGIN SELECT (quantité=0) INTO stock_P
FROM PRODUIT  
WHERE un_Produit = numProduit
RETURN stock_P;
END;
 
 
CREATE OR REMPLACE FUNCTION get_Nom(un_Produit INTEGER) RETURN INTEGER
AS nom_P VARCHAR2
BEGIN
SELECT nom INTO nom_P
FROM PRODUIT  
WHERE un_Produit = numProduit
RETURN nom_P;
END;
 
 
 
 
CREATE OR REMPLACE FUNCTION get_Stock(un_Produit INTEGER) RETURN INTEGER
AS stock_P INTEGER
BEGIN
SELECT quantité INTO stock_P
FROM PRODUIT  
WHERE un_Produit = numProduit
RETURN stock_P
END;
 
 
CREATE OR REMPLACE FUNCTION get_Prix(un_Produit INTEGER) RETURN INTEGER
AS prix_P FLOAT
BEGIN
SELECT prix INTO prix_P
FROM PRODUIT  
WHERE un_Produit = numProduit
RETURN prix_P
END;


